{"mappings":"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","sources":["packages/heat/extension/index.ts","packages/heat/extension/Heat.ts"],"sourcesContent":["// const io = require(\"socket.io-client\");\nimport { Heat } from \"./Heat\";\nimport { NodeCG } from \"nodecg-types/types/server\";\n\nmodule.exports = function (nodecg: NodeCG) {\n\t// let client: TwitchApiServiceClient | null = null;\n\tlet channel = nodecg.Replicant<string>(\"channel\", {\n\t\tdefaultValue: \"47019739\",\n\t\tpersistent: true,\n\t}); //648196501 - bot 47019739 - Main Channel\n\tif (nodecg.bundleConfig?.channel)\n\t\tchannel.value = nodecg.bundleConfig.channel;\n\telse {\n\t\tnodecg.log.info(\n\t\t\t`No channel specified, using previous value or default: ${channel.value}`\n\t\t);\n\t}\n\tif (!channel.value || typeof channel.value !== \"string\") {\n\t\tchannel.value = \"47019739\";\n\t}\n\tvar heat: Heat;\n\theat = new Heat(channel.value, nodecg);\n\theat.on(\"click\", async (data: ClickData) => {\n\t\tconst clickData = {\n\t\t\tx: data.x,\n\t\t\ty: data.y,\n\t\t\tid: data.id,\n\t\t\tuser: await heat.getUserById(data.id),\n\t\t};\n\n\t\t// Finally, use the click coordinates to create your experience.\n\t\tnodecg.log.info(\n\t\t\t\"Someone fucking clicked the stream: \",\n\t\t\tclickData.x,\n\t\t\tclickData.y\n\t\t);\n\t\tnodecg.sendMessage(\"click\", clickData);\n\t});\n\n\tnodecg.listenFor(\"restartHeat\", heatReset);\n\tinterface ClickData {\n\t\tid: string;\n\t\tuser: { display_name: string };\n\t\tx: number;\n\t\ty: number;\n\t}\n\n\tnodecg.log.info(\"heat bundle started.\");\n\tfunction heatReset() {\n\t\theat.channelId = channel.value;\n\t\theat.refreshConnection();\n\t}\n};\n","import { EventEmitter } from \"events\";\nimport { NodeCG, ReplicantServer } from \"nodecg-types/types/server\";\nimport { WebSocket } from \"ws\";\nrequire(\"dotenv\").config({ path: \"../.env\" });\nconst fetch = (...args: any[]) =>\n\t// @ts-ignore\n\timport(\"node-fetch\").then(({ default: fetch }) => fetch(...args));\n\ninterface TwitchToken {\n\taccess_token: string;\n\texpires_in: number;\n\trefresh_token: string;\n\tscope: string[];\n\ttoken_type: \"bearer\";\n}\nexport class Heat extends EventEmitter {\n\tchannelId: string | number;\n\tusers: Map<string, { display_name: string }>;\n\tws: WebSocket | null;\n\ttoken: ReplicantServer<TwitchToken>;\n\n\tconstructor(channelId: string | number, nodecg: NodeCG) {\n\t\tsuper();\n\n\t\tif (!channelId) {\n\t\t\tthis.log(\"Invalid channel ID.\");\n\t\t\treturn;\n\t\t}\n\n\t\tthis.token = nodecg.Replicant<TwitchToken>(\"twitchToken\", {\n\t\t\tpersistent: true,\n\t\t});\n\t\tthis.users = new Map();\n\n\t\tthis.getToken();\n\n\t\tthis.channelId = channelId;\n\t\tthis.connect();\n\t}\n\n\tconnect() {\n\t\tlet url = `wss://heat-api.j38.net/channel/${this.channelId}`;\n\t\t//let url = `wss://heat-api.j38.workers.dev/channel/${this.channelId}`;\n\t\tthis.log(`Connecting to ${url}.`);\n\t\tthis.ws = new WebSocket(url);\n\n\t\t// Initial connection.\n\t\tthis.ws.addEventListener(\"open\", () => {\n\t\t\tthis.log(\n\t\t\t\t`Connection open to Heat API server, channel ${this.channelId}.`\n\t\t\t);\n\t\t});\n\n\t\tinterface HeatMessage {\n\t\t\ttype: \"system\" | \"click\";\n\n\t\t\tmessage: string;\n\t\t\tid: string;\n\t\t\tx: string;\n\t\t\ty: string;\n\t\t}\n\n\t\t// Message received.\n\t\tthis.ws.addEventListener(\"message\", (message: any) => {\n\t\t\tlet data = JSON.parse(message.data.toString()) as HeatMessage;\n\t\t\tconsole.log(\"message received: \", data);\n\n\t\t\tif (data.type == \"system\") {\n\t\t\t\tthis.log(\"System message: \" + data.message);\n\t\t\t} else {\n\t\t\t\tthis.emit(\"click\", data);\n\t\t\t}\n\t\t});\n\n\t\t// Handle close and reconnect.\n\t\tthis.ws.addEventListener(\"close\", (event: any) => {\n\t\t\tthis.log(\"Connection closed:\");\n\t\t\tconsole.log(event);\n\t\t\tthis.ws = null;\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.connect();\n\t\t\t}, 1000);\n\t\t});\n\t}\n\n\tasync getUserById(id: string) {\n\t\t// Check user map first.\n\t\tif (this.users.has(id)) return this.users.get(id);\n\n\t\t// Ignore invalid names.\n\t\tif (id.startsWith(\"A\")) return { display_name: \"Anonymous\" };\n\t\tif (id.startsWith(\"U\")) return { display_name: \"Unverified\" };\n\n\t\t// Query Twitch for user details.\n\t\tconst url = `https://api.twitch.tv/helix/users?id=${id}`;\n\t\tconst headers = {\n\t\t\tAuthorization: `Bearer ${this.token.value.access_token}`,\n\t\t};\n\n\t\t// Handle response.\n\t\tlet response = await fetch(url, { headers });\n\t\tif (response.ok) {\n\t\t\tlet data = (await response.json()) as { display_name: string };\n\t\t\tthis.users.set(id, data);\n\t\t\tthis.log(\"User for id \" + id + \" found: \" + data.display_name);\n\t\t\treturn data;\n\t\t} else {\n\t\t\treturn { display_name: \"Unknown\" };\n\t\t}\n\t}\n\tasync getUserByName(name: string) {\n\t\tname = name.toLowerCase();\n\t\t// Check user map first.\n\n\t\t// Ignore invalid names.\n\t\tif (name.startsWith(\"A\")) return { display_name: \"Anonymous\" };\n\t\tif (name.startsWith(\"U\")) return { display_name: \"Unverified\" };\n\n\t\t// Query Twitch for user details.\n\t\tconst url = `https://api.twitch.tv/helix/users?login=${name}`;\n\t\tconst headers = {\n\t\t\tAuthorization: `Bearer ${this.token.value.access_token}`,\n\t\t};\n\n\t\t// Handle response.\n\t\tlet response = await fetch(url, { headers });\n\t\tif (response.ok) {\n\t\t\tlet data = (await response.json()) as { display_name: string };\n\t\t\tthis.users.set(name, data);\n\t\t\tthis.log(\"User for id \" + name + \" found: \" + data.display_name);\n\t\t\treturn data;\n\t\t} else {\n\t\t\treturn { display_name: \"Unknown\" };\n\t\t}\n\t}\n\n\tasync getToken(): Promise<TwitchToken> {\n\t\tconst url = `https://id.twitch.tv/oauth2/token`;\n\t\tconst clientID = process.env.CLIENT_ID || \"\",\n\t\t\tclientSecret = process.env.CLIENT_SECRET || \"\";\n\t\tconst body = new URLSearchParams({\n\t\t\tgrant_type: \"client_credentials\",\n\t\t\tclient_id: clientID,\n\t\t\tclient_secret: clientSecret,\n\t\t\tscope: \"user:read:follows user:read:subscriptions channel:read:subscriptions channel:read:predictions channel:read:polls channel:read:hype_train channel:read:goals bits:read\",\n\t\t});\n\t\tlet tokenScopes = this.token.value.scope;\n\t\tlet currScopes = (body.get(\"scope\") as string).split(\" \");\n\t\tif (\n\t\t\tthis.token.value?.refresh_token &&\n\t\t\ttokenScopes.every((s) => currScopes.includes(s)) &&\n\t\t\ttokenScopes.length == currScopes.length\n\t\t) {\n\t\t\tbody.set(\"refresh_token\", this.token.value.refresh_token);\n\t\t\tbody.set(\"grant_type\", \"refresh_token\");\n\t\t\tbody.delete(\"scope\");\n\t\t}\n\t\t// Handle response.\n\t\tlet response = await fetch(url, { body, method: \"POST\" });\n\t\tlet data = (await response.json()) as ErrorRes | TwitchToken;\n\t\tif (response.ok) {\n\t\t\tdata = data as TwitchToken;\n\t\t\tthis.token.value = data;\n\t\t\tthis.log(\n\t\t\t\t\"Token received: \" +\n\t\t\t\t\tdata.access_token +\n\t\t\t\t\t\", Expires in: \" +\n\t\t\t\t\tdata.expires_in\n\t\t\t);\n\t\t\treturn data;\n\t\t} else {\n\t\t\tdata = data as ErrorRes;\n\n\t\t\tthis.log(\"Token request rejected: \" + data.message);\n\t\t\treturn {\n\t\t\t\taccess_token: \"\",\n\t\t\t\texpires_in: 0,\n\t\t\t\trefresh_token: \"\",\n\t\t\t\tscope: [],\n\t\t\t\ttoken_type: \"bearer\",\n\t\t\t};\n\t\t}\n\t}\n\n\trefreshConnection() {\n\t\tif (this.ws && this.ws.readyState != WebSocket.CLOSED) {\n\t\t\tthis.ws.close();\n\t\t\tthis.ws = null;\n\t\t}\n\t\tthis.connect();\n\t}\n\n\tlog(message: string | any) {\n\t\tlet prefix = \"[HEAT]\";\n\t\tconsole.log(prefix + \" \" + message);\n\t}\n}\ninterface ErrorRes {\n\terror: string;\n\tmessage: string;\n\tstatus: number;\n}\n"],"names":[],"version":3,"file":"index.js.map","sourceRoot":"../../../"}